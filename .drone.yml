###########################################
##### k3d CLI/binary release pipeline #####
###########################################

kind: pipeline
type: kubernetes
name: main

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: golang:1.14
    commands:
      - make ci-setup
      - make check-fmt lint
    when:
      event:
        - push
        - pull_request
        - tag

  - name: test
    image: docker:19.03
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - apk add git bash curl sudo jq make
      - sleep 5 # give docker enough time to start
      - make e2e
    when:
      event:
        - push
        - pull_request
        - tag

  - name: build
    image: golang:1.14
    environment:
      GIT_TAG: "${DRONE_TAG}"
    commands:
      - make ci-setup
      - make build-cross
    depends_on:
      - lint
      - test
    when:
      branch:
        - main
      event:
        - push
        - tag

  - name: pre-release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - _dist/*
      checksum:
        - sha256
      prerelease: true
    depends_on:
      - lint
      - test
      - build
    when:
      event:
        - tag
      ref:
        include:
          - "refs/tags/*rc*"
          - "refs/tags/*beta*"
          - "refs/tags/*alpha*"

  - name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - _dist/*
      checksum:
        - sha256
    depends_on:
      - lint
      - test
      - build
    when:
      event:
        - tag
      ref:
        exclude:
          - "refs/tags/*rc*"
          - "refs/tags/*beta*"
          - "refs/tags/*alpha*"

  - name: release-aur
    image: archlinux:20200705
    settings:
      package_name: rancher-k3d-bin
      commit_username: Drone CI
      commit_email: jonas@dellinger.dev
      ssh_private_key:
        from_secret: ssh_private_key
    commands:
      - makepkg --version
      - env | sort
      - pacman -Syu --noconfirm && pacman -S --noconfirm openssh
      - PACKAGE_NAME=$INPUT_PACKAGE_NAME
      - REPO_URL="ssh://aur@aur.archlinux.org/${PACKAGE_NAME}.git"
      #- NEW_RELEASE=${DRONE_COMMIT_REF##*/v}
      - NEW_RELEASE=3.0.1
      - COMMIT_USERNAME=$PLUGIN_COMMIT_USERNAME
      - COMMIT_EMAIL=$PLUGIN_COMMIT_EMAIL
      - SSH_PRIVATE_KEY=$PLUGIN_SSH_PRIVATE_KEY
      - echo "---------------- AUR Package version $PACKAGE_NAME/$NEW_RELEASE ----------------"
      - sed -i "s/INTEGRITY_CHECK=.*$/INTEGRITY_CHECK=(sha256)/" /etc/makepkg.conf
      - mkdir $HOME/.ssh && chmod 700 $HOME/.ssh
      - ssh-keyscan -t ed25519 aur.archlinux.org >> $HOME/.ssh/known_hosts
      - echo -e "${SSH_PRIVATE_KEY//_/\\n}" > $HOME/.ssh/aur
      - chmod 600 $HOME/.ssh/aur*
      - git config --global user.name "$COMMIT_USERNAME"
      - git config --global user.email "$COMMIT_EMAIL"
      - cd /tmp
      - git clone "$REPO_URL"
      - cd "$PACKAGE_NAME"
      - SHA256_SUMS_x86_64=`CARCH=x86_64 makepkg -g 2> /dev/null`
      - SHA256_SUMS_aarch64=`CARCH=aarch64 makepkg -g 2> /dev/null`
      - SHA256_SUMS_arm=`CARCH=arm makepkg -g 2> /dev/null`
      - cat PKGBUILD.template | envsubst '$NEW_RELEASE' > PKGBUILD
      - cat PKGBUILD

services:
  # Starting the docker service to be used by dind
  - name: docker
    image: docker:19.03-dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}
# new build :)
